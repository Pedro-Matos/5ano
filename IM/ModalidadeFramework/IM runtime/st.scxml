<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" 
	xmlns:commons="http://commons.apache.org/scxml"
	xmlns:emma="http://www.w3.org/2003/04/emma" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mmi="http://www.w3.org/2008/04/mmi-arch"
	xsi:schemaLocation="http://www.w3.org/2005/07/scxml scxml.xsd http://commons.apache.org/scxml commons.xsd http://www.w3.org/2008/04/mmi-arch mmi.xsd http://www.w3.org/2003/04/emma emma.xsd" version="1.0"
	initialstate="init">

	<!-- data model definition -->
	<datamodel>
		<!-- top-level variables -->
		<data name="contextId" />
		<data name="requestId" />
		<data name="sourceMC" />
		<data name="source" expr="IM" />
		<data name="Action" />
		<data name="currAction" />
		<data name="KINECT" />
		<data name="ASR" /> 
		<data name="TTS" /> 
		<data name="GUI" /> 
	</datamodel>

	<state id="init">
		<onentry>
			<log label="[init]" expr="MULTIMODAL FRAMEWORK" />
		</onentry>
		<transition target="main"/>
	</state>
		
		<parallel id="main">
			<state id="init_register">
				<onentry>
					<log label="[init_register]" expr="OK" />
				</onentry>
			
				<!-- RECEIVED newContextRequest -->
				<transition event="mmi:newContextRequest" target="init_register">
					<assign name="requestId" expr="${_eventdata.requestID}" />
					<assign name="sourceMC" expr="${_eventdata.sourceMC}" />
					<assign name="contextId" expr="${mmi:newContextId()}" />
					
					<commons:var name="newContextResponse" expr="${mmi:newContextResponse(contextId, source, sourceMC, requestId)}" />
					<send event="mmi:newContextResponse" target="${sourceMC}" targettype="MC" namelist="newContextResponse" />

					<if cond="${_eventdata.sourceMC eq 'ASR'}">
						<assign name="ASR" expr="true" />
					</if>
					
					<if cond="${_eventdata.sourceMC eq 'KINECT'}">
						<assign name="KINECT" expr="true" />
					</if>
					
					<if cond="${_eventdata.sourceMC eq 'TTS'}">
						<assign name="TTS" expr="true" />
					</if>
					
					<if cond="${_eventdata.sourceMC eq 'GUI'}">
						<assign name="GUI" expr="true" />
					</if>
			
				</transition>
			</state>
			<state id="events">
				<onentry>
					<log label="[Events]" expr="OK" />
				</onentry>
			
				<transition event="mmi:extensionNotification" target="events">
					<if cond="${_eventdata.sourceMC eq 'APP'}">
						<assign name="Action" expr="${_eventdata.data}" />
						<commons:var name="startRequest" expr="${mmi:newStartRequest(contextId, source, 'TTS', mmi:newRequestId(contextId), 'READ', Action)}" />
						<send event="mmi:startRequest" target="TTS" targettype="MC" namelist="startRequest" />
					</if>

					<!-- EVENT FROM ASR -->
					<if cond="${_eventdata.sourceMC eq 'ASR'}">
						<assign name="currAction" expr="command" />
						<assign name="Action" expr="${_eventdata.data}" />
						<commons:var name="startRequest" expr="${mmi:newStartRequest(contextId, source, 'GUI', mmi:newRequestId(contextId), currAction, Action)}" />
						<send event="mmi:startRequest" target="GUI" targettype="MC" namelist="startRequest" />

					</if>
				
					<!-- EVENT FROM TOUCH -->
					<if cond="${_eventdata.sourceMC eq 'TOUCH'}">
						<assign name="currAction" expr="command" />
						<assign name="Action" expr="${_eventdata.data}" />
						<commons:var name="startRequest" expr="${mmi:newStartRequest(contextId, source, 'GUI', mmi:newRequestId(contextId), currAction, Action)}" />
						<send event="mmi:startRequest" target="GUI" targettype="MC" namelist="startRequest" />
					</if>
				</transition>
			
			
			</state>
			
			
		</parallel>
	


	<state id="quit">
	</state>

</scxml>